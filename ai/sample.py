"""
  Copyright (c) 2022 ELIPCERO
  All rights reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
"""

from pathlib import Path
import pandas as pd
import numpy as np

np.random.seed(42)

field_temp = 'temp'
field_ph = 'ph'
field_orp = 'orp'
field_cl = 'chlorine'
field_quality = 'quality'


def random_sample(swpc_sample: Path, size_dataset: int = 1000):
    """Randomly generates samples of metrics

    Args:
        swpc_sample (Path): swpc sample path
        size_dataset (int, optional): sample size. Defaults to 1000.
    """
    # Numerical values are assigned randomly
    data = {
        field_temp: np.random.uniform(20, 40, size_dataset),
        field_ph: np.random.uniform(6, 8.5, size_dataset),
        field_orp: np.random.uniform(400, 900, size_dataset),
        field_cl: np.random.uniform(5.5, 8.5, size_dataset)
    }

    # Water quality labels are assigned in a fictitious manner (balanced)
    def quality_water_tagging(row):
        prob = np.random.rand()

        if prob < 0.33:  # 33% probability
            return 0
        elif 0.33 <= prob < 0.66:  # # 33% probability
            return 1
        else:  # # 34% probability
            return 2

    # dataframe is created
    data = pd.DataFrame(data)
    data[field_quality] = data.apply(quality_water_tagging, axis=1)

    data.to_csv(swpc_sample, index=False)

    count = data[field_quality].value_counts()
    print(F'Number of samples generated by category: {count}\n')
